name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '39 12 * * *'
  push:
    branches: [ dev ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ dev ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Docker Setup QEMU
        # You may pin to the exact commit or the version.
        # uses: docker/setup-qemu-action@27d0a4f181a40b142cce983c5393082c365d1480
        uses: docker/setup-qemu-action@v1.2.0
        with:
          # QEMU static binaries Docker image (e.g. tonistiigi/binfmt:latest)

          # Platforms to install (e.g. arm64,riscv64,arm)
          platforms: arm64,arm/v7,amd64
          
      - name: Build and push Docker image
        run: |
              docker buildx create --use
              docker buildx build --platform linux/arm64 \
                      -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:arm64-${{ github.run_number }} \
                      --push \
                      -f ./Dockerfile_arm64v8 .
              docker buildx build --platform linux/arm/v7 \
                      -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:arm32-${{ github.run_number }} \
                      --push \
                      -f ./Dockerfile_arm32v7 .
              docker buildx build --platform linux/amd64 \
                      -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:amd64-${{ github.run_number }} \
                      --push \
                      -f ./Dockerfile .

